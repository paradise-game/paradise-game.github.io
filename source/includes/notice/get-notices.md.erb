## Get Notices

> Request

```http
GET <%= config[:version] %>/notice/all HTTP/1.1
Host: <%= config[:host] %>
```

```shell
curl --location --request GET '<%= config[:base_url] %>/notice/all'
```

```javascript
const axios = require('axios');

let config = {
  method: 'get',
  maxBodyLength: Infinity,
  url: '<%= config[:base_url] %>/notice/all',
  headers: { }
};

axios.request(config)
.then((response) => {
  console.log(JSON.stringify(response.data));
})
.catch((error) => {
  console.log(error);
});
```

> Response

```json
[
  {
    "id": "64772285c1856c0eebb7d56f",
    "title": "공지사항 제목",
    "body": "공지사항 내용",
    "createdAt": "2023-05-31T10:33:41.456Z",
    "updatedAt": "2023-05-31T10:33:41.456Z"
  }
]
```

지금까지 작성된 전체 공지사항 목록을 최근에 생성된 공지부터 정렬된 상태로 가져옵니다.

### HTTP Request

`GET <%= config[:version] %>/notice/all`

### Scopes

- No permission required

### Response Code

| Code | Description |
| ---- | ----------- |
| 200  | OK          |

### Response Data

| Parameter | Type     | Description |
| --------- | -------- | ----------- |
| id        | `string` | 공지사항 ID |
| title     | `string` | 공지사항 제목 |
| body      | `string` | 공지사항 내용 |
| createdAt | `string` | 공지사항 작성일 |
| updatedAt | `string` | 공지사항 수정일 |