## Get Deposit Transaction History

> Request

```http
GET <%= config[:version] %>/transaction/deposits HTTP/1.1
Host: <%= config[:host] %>
Authorization: Bearer {access_token}
```

```shell
curl --location '<%= config[:base_url] %>/transaction/deposits' \
--header 'Authorization: Bearer {access_token}'
```

```javascript
const axios = require('axios');

let config = {
  method: 'get',
  maxBodyLength: Infinity,
  url: '<%= config[:base_url] %>/transaction/deposits',
  headers: { 
    'Authorization': 'Bearer {access_token}'
  }
};

axios.request(config)
  .then((response) => {
    console.log(JSON.stringify(response.data));
  })
  .catch((error) => {
    console.log(error);
  });
```

> Response

```json
[]
```

사용자의 전체 외부 입금 내역을 최신 순서로 정렬해 조회합니다.

<aside class="notice">
사용자 외부 입금 내역 조회는 <a href="#create-wallet">지갑 생성</a>을 진행한 사용자에 한해 사용 가능합니다.
</aside>

### HTTP Request

`GET <%= config[:version] %>/transaction/deposits`

### Scopes

- `user:account`

### Response Code

| Code | Description |
| ---- | ----------- |
| 200  | OK          |

### Response Data

| Parameter | Type     | Description |
| --------- | -------- | ----------- |
| fromAddress | `string` | GNI를 출금하는 주소 |
| toAddress | `string` | GNI를 입금받는 주소 |
| amount | `string` | 입금 수량 |
| createdAt | `string` | 트랜잭션 발생 시간 |
| txHash | `string` | 트랜잭션 해시 |

### Error Code
| Code | Message | Description |
| ---- | ------- | ----------- |
| 403 | `Forbidden` | 사용자가 지갑을 생성하지 않음 |