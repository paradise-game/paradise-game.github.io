## Get Account

> Request

```http
GET /account?field=address&field=balance HTTP/1.1
Host: <%= config[:host] %>
Authorization: Bearer {access_token}
```

```shell
curl --location '<%= config[:base_url] %>/account?field=address&field=balance' \
--header 'Authorization: Bearer {access_token}'
```

```javascript
const axios = require('axios');

let config = {
  method: 'get',
  maxBodyLength: Infinity,
  url: '<%= config[:base_url] %>/account?field=address&field=balance',
  headers: { 
    'Authorization': 'Bearer {access_token}'
  }
};

axios.request(config)
  .then((response) => {
    console.log(JSON.stringify(response.data));
  })
  .catch((error) => {
    console.log(error);
  });
```

> Response

```json
{
  "account": {
    "address": "0xBB34C4a75E5f9ebe49215cB53dBB9bC6Aa59A68D",
    "balance": "999980"
  }
}
```

사용자의 계정(EOA) 정보를 조회합니다.

<aside class="success">
EOA(External Owned Account)는 개인이 소유한 블록체인 계정입니다.
</aside>

계정에 대한 자세한 내용은 [이더리움 백서](https://ethereum.org/en/whitepaper/#ethereum-accounts)를 참고하세요.

### Fields

가져올 필드를 `field` 파라미터로 지정할 수 있습니다. 특정 필드를 지정할 수 있으며, 지정된 필드는 응답에 포함됩니다.

Field | Description
----- | -----------
address | 계정주소
balance | GNI 소유량

### HTTP Request

`GET /account`

### Scopes

- `user:account`

### Query Parameters

Parameter | Type | Required | Description
--------- | ---- | -------- | -----------
field | `string` | true | 가져올 필드

### Response Code

| Code | Description |
| ---- | ----------- |
| 200  | OK          |

### Response Data

Parameter | Type | Optional | Description
--------- | ---- | -------- | -----------
account | `object` | false | 계정 정보
account.address | `string` | true | 계정주소
account.balance | `string` | true | GNI 소유량

`amount`는 `string` 타입이며, 소수점 18자리로 표현합니다. [BigNumber.js](https://mikemcl.github.io/bignumber.js/) 라이브러리를 사용하여 계산해야 합니다.

<aside class="notice">
GNI 소유량(balance)은 소수 자릿수(18=wei)를 반환합니다. 예를 들어, 1000000000000000000 = 1 GNI 입니다.
</aside>